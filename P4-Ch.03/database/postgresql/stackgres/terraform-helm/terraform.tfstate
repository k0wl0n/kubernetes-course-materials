{
  "version": 4,
  "terraform_version": "1.5.7",
  "serial": 1,
  "lineage": "af7a2d9a-1fec-a09f-efd5-32c5b81ed42c",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "stackgres_operator",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "stackgres-operator",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "stackgres-operator",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.12.0",
                "chart": "stackgres-operator",
                "first_deployed": 1726290686,
                "last_deployed": 1726290686,
                "name": "stackgres-operator",
                "namespace": "stackgres",
                "notes": "Release Name: stackgres-operator\nStackGres Version: 1.12.0\n\n   _____ _             _     _____\n  / ____| |           | |   / ____|\n | (___ | |_ __ _  ___| | _| |  __ _ __ ___  ___\n  \\___ \\| __/ _` |/ __| |/ / | |_ | '__/ _ \\/ __|\n  ____) | || (_| | (__|   \u003c| |__| | | |  __/\\__ \\\n |_____/ \\__\\__,_|\\___|_|\\_\\\\_____|_|  \\___||___/\n                                  by OnGres, Inc.\n\nCheck if the operator was successfully deployed and is available:\n\n    kubectl describe deployment -n stackgres stackgres-operator\n\n    kubectl wait -n stackgres deployment/stackgres-operator --for condition=Available\n\nCheck if the restapi was successfully deployed and is available:\n\n    kubectl describe deployment -n stackgres stackgres-restapi\n\n    kubectl wait -n stackgres deployment/stackgres-restapi --for condition=Available\nTo access StackGres Operator UI from localhost, run the below commands:\n\n    POD_NAME=$(kubectl get pods --namespace stackgres -l \"stackgres.io/restapi=true\" -o jsonpath=\"{.items[0].metadata.name}\")\n\n    kubectl port-forward \"$POD_NAME\" 8443:9443 --namespace stackgres\n\nRead more about port forwarding here: http://kubernetes.io/docs/user-guide/kubectl/kubectl_port-forward/\n\nNow you can access the StackGres Operator UI on:\n\nhttps://localhost:8443\nTo get the username, run the command:\n\n    kubectl get secret -n stackgres stackgres-restapi-admin --template '{{ printf \"username = %s\\n\" (.data.k8sUsername | base64decode) }}'\n\nTo get the generated password, run the command:\n\n    kubectl get secret -n stackgres stackgres-restapi-admin --template '{{ printf \"password = %s\\n\" (.data.clearPassword | base64decode) }}'\n\nRemember to remove the generated password hint from the secret to avoid security flaws:\n\n    kubectl patch secret --namespace stackgres stackgres-restapi-admin --type json -p '[{\"op\":\"remove\",\"path\":\"/data/clearPassword\"}]'\n",
                "revision": 1,
                "values": "{\"adminui\":{\"image\":{\"name\":\"stackgres/admin-ui\",\"pullPolicy\":\"IfNotPresent\",\"tag\":\"1.12.0\"},\"resources\":{},\"service\":{\"exposeHTTP\":false,\"loadBalancerIP\":null,\"loadBalancerSourceRanges\":null,\"nodePort\":null,\"nodePortHTTP\":null,\"type\":\"ClusterIP\"}},\"allowedNamespaces\":[],\"authentication\":{\"createAdminSecret\":true,\"oidc\":null,\"password\":null,\"type\":\"jwt\",\"user\":\"admin\"},\"cert\":{\"autoapprove\":true,\"certDuration\":730,\"certManager\":{\"autoConfigure\":false,\"duration\":\"2160h\",\"encoding\":\"PKCS1\",\"renewBefore\":\"360h\",\"size\":2048},\"createForOperator\":true,\"createForWebApi\":true,\"crt\":null,\"jwtRsaKey\":null,\"jwtRsaPub\":null,\"key\":null,\"regenerateCert\":true,\"regenerateWebCert\":true,\"regenerateWebRsa\":true,\"secretName\":null,\"webCertDuration\":null,\"webCrt\":null,\"webKey\":null,\"webRsaDuration\":null,\"webSecretName\":null},\"containerRegistry\":\"quay.io\",\"deploy\":{\"operator\":true,\"restapi\":true},\"developer\":{\"allowPullExtensionsFromImageRepository\":false,\"disableArbitraryUser\":false,\"enableJvmDebug\":false,\"enableJvmDebugSuspend\":false,\"externalOperatorIp\":null,\"externalOperatorPort\":null,\"externalRestApiIp\":null,\"externalRestApiPort\":null,\"logLevel\":null,\"patches\":{\"adminui\":{\"volumeMounts\":[],\"volumes\":[]},\"clusterController\":{\"volumeMounts\":[],\"volumes\":[]},\"distributedlogsController\":{\"volumeMounts\":[],\"volumes\":[]},\"jobs\":{\"volumeMounts\":[],\"volumes\":[]},\"operator\":{\"volumeMounts\":[],\"volumes\":[]},\"restapi\":{\"volumeMounts\":[],\"volumes\":[]}},\"showDebug\":false,\"showStackTraces\":false,\"version\":null},\"extensions\":{\"cache\":{\"enabled\":false,\"hostPath\":null,\"persistentVolume\":{\"size\":\"1Gi\",\"storageClass\":null},\"preloadedExtensions\":[\"x86_64/linux/timescaledb-1\\\\.7\\\\.4-pg12\"]},\"repositoryUrls\":[\"https://extensions.stackgres.io/postgres/repository\"]},\"grafana\":{\"autoEmbed\":false,\"dashboardConfigMap\":null,\"datasourceName\":\"Prometheus\",\"password\":\"prom-operator\",\"schema\":\"http\",\"secretName\":null,\"secretNamespace\":null,\"secretPasswordKey\":null,\"secretUserKey\":null,\"token\":null,\"urls\":null,\"user\":\"admin\",\"webHost\":null},\"imagePullPolicy\":\"IfNotPresent\",\"jobs\":{\"affinity\":{},\"annotations\":{},\"image\":{\"name\":\"stackgres/jobs\",\"pullPolicy\":\"IfNotPresent\",\"tag\":\"1.12.0\"},\"nodeSelector\":{},\"resources\":{},\"tolerations\":[]},\"operator\":{\"affinity\":{},\"annotations\":{},\"image\":{\"name\":\"stackgres/operator\",\"pullPolicy\":\"IfNotPresent\",\"tag\":\"1.12.0\"},\"nodeSelector\":{},\"resources\":{},\"service\":{\"annotations\":{}},\"serviceAccount\":{\"annotations\":{},\"repoCredentials\":[]},\"tolerations\":[]},\"prometheus\":{\"allowAutobind\":true},\"rbac\":{\"create\":true},\"restapi\":{\"affinity\":{},\"annotations\":{},\"image\":{\"name\":\"stackgres/restapi\",\"pullPolicy\":\"IfNotPresent\",\"tag\":\"1.12.0\"},\"name\":\"stackgres-restapi\",\"nodeSelector\":{},\"resources\":{},\"service\":{\"annotations\":{}},\"serviceAccount\":{\"annotations\":{},\"repoCredentials\":[]},\"tolerations\":[]},\"serviceAccount\":{\"annotations\":{},\"create\":true,\"repoCredentials\":[]}}",
                "version": "1.12.0"
              }
            ],
            "name": "stackgres-operator",
            "namespace": "stackgres",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://stackgres.io/downloads/stackgres-k8s/stackgres/helm/",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "# -- The container registry host (and port) where the images will be pulled from.\ncontainerRegistry: quay.io\n# -- Image pull policy used for images loaded by the Operator\nimagePullPolicy: \"IfNotPresent\"\n# -- Section to configure Operator allowed namespaces that the operator is allowed to use. If empty all namespaces will be allowed (default). \nallowedNamespaces: []\n# Section to configure Operator Installation ServiceAccount\nserviceAccount:\n  # -- If `true` the Operator Installation ServiceAccount will be created\n  create: true\n  # -- Section to configure Operator ServiceAccount annotations\n  annotations: {}\n  # -- Repositories credentials Secret names to attach to ServiceAccounts and Pods\n  repoCredentials: []\n\n# Section to configure Operator Pod\noperator:\n  # Section to configure Operator image\n  image:\n    # -- Operator image name\n    name: \"stackgres/operator\"\n    # -- Operator image tag\n    tag: \"1.12.0\"\n    # -- Operator image pull policy\n    pullPolicy: \"IfNotPresent\"\n  # -- Operator Pod annotations\n  annotations: {}\n  # -- Operator Pod resources. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#resourcerequirements-v1-core\n  resources: {}\n  # -- Operator Pod node selector\n  nodeSelector: {}\n  # -- Operator Pod tolerations. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#toleration-v1-core\n  tolerations: []\n  # -- Operator Pod affinity. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#affinity-v1-core\n  affinity: {}\n  # Section to configure Operator ServiceAccount\n  serviceAccount:\n    # -- Section to configure Operator ServiceAccount annotations\n    annotations: {}\n    # -- Repositories credentials Secret names to attach to ServiceAccounts and Pods\n    repoCredentials: []\n  # Section to configure Operator Service\n  service:\n    # -- Section to configure Operator Service annotations\n    annotations: {}\n\n# Section to configure REST API Pod\nrestapi:\n  # -- REST API Pod name\n  name: stackgres-restapi\n  # Section to configure REST API image\n  image:\n    # -- REST API image name\n    name: \"stackgres/restapi\"\n    # -- REST API image tag\n    tag: \"1.12.0\"\n    # -- REST API image pull policy\n    pullPolicy: \"IfNotPresent\"\n  # -- REST API Pod annotations\n  annotations: {}\n  # -- REST API Pod resources. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#resourcerequirements-v1-core\n  resources: {}\n  # -- REST API Pod node selector\n  nodeSelector: {}\n  # -- REST API Pod tolerations. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#toleration-v1-core\n  tolerations: []\n  # -- REST API Pod affinity. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#affinity-v1-core\n  affinity: {}\n  # Section to configure REST API ServiceAccount\n  serviceAccount:\n    # -- REST API ServiceAccount annotations\n    annotations: {}\n    # -- Repositories credentials Secret names to attach to ServiceAccounts and Pods\n    repoCredentials: []\n  # Section to configure REST API Service\n  service:\n    # -- REST API Service annotations\n    annotations: {}\n\n# Section to configure Web Console container\nadminui:\n  # Section to configure Web Console image\n  image:\n    # -- Web Console image name\n    name: \"stackgres/admin-ui\"\n    # -- Web Console image tag\n    tag: \"1.12.0\"\n    # -- Web Console image pull policy\n    pullPolicy: \"IfNotPresent\"\n  # -- Web Console resources. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#resourcerequirements-v1-core\n  resources: {}\n  # Section to configure Web Console service.\n  service:\n    # -- When set to `true` the HTTP port will be exposed in the Web Console Service\n    exposeHTTP: false\n    # -- The type used for the service of the UI:\n    # * Set to LoadBalancer to create a load balancer (if supported by the kubernetes cluster)\n    #   to allow connect from Internet to the UI. Note that enabling this feature will probably incurr in\n    #   some fee that depend on the host of the kubernetes cluster (for example this is true for EKS, GKE\n    #   and AKS).\n    # * Set to NodePort to expose admin UI from kubernetes nodes.\n    type: ClusterIP\n    # -- (string) LoadBalancer will get created with the IP specified in\n    #   this field. This feature depends on whether the underlying cloud-provider supports specifying\n    #   the loadBalancerIP when a load balancer is created. This field will be ignored if the\n    #   cloud-provider does not support the feature.\n    loadBalancerIP:\n    # -- (array) If specified and supported by the platform,\n    #   this will restrict traffic through the cloud-provider load-balancer will be restricted to the\n    #   specified client IPs. This field will be ignored if the cloud-provider does not support the\n    #   feature.\n    # More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/\n    loadBalancerSourceRanges:\n    # -- (integer) The HTTPS port used to expose the Service on Kubernetes nodes\n    nodePort:\n    # -- (integer) The HTTP port used to expose the Service on Kubernetes nodes\n    nodePortHTTP:\n\n# Section to configure Operator Installation Jobs\njobs:\n  # Section to configure Operator Installation Jobs image\n  image:\n    # -- Operator Installation Jobs image name\n    name: \"stackgres/jobs\"\n    # -- Operator Installation Jobs image tag\n    tag: \"1.12.0\"\n    # -- Operator Installation Jobs image pull policy\n    pullPolicy: \"IfNotPresent\"\n  # -- Operator Installation Jobs annotations\n  annotations: {}\n  # -- Operator Installation Jobs resources. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#resourcerequirements-v1-core\n  resources: {}\n  # -- Operator Installation Jobs node selector\n  nodeSelector: {}\n  # -- Operator Installation Jobs tolerations. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#toleration-v1-core\n  tolerations: []\n  # -- Operator Installation Jobs affinity. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#affinity-v1-core\n  affinity: {}\n\n# Section to configure deployment aspects.\ndeploy:\n  # -- When set to `true` the Operator will be deployed.\n  operator: true\n  # -- When set to `true` the Web Console / REST API will be deployed.\n  restapi: true\n\n# Section to configure the Operator, REST API and Web Console certificates and JWT RSA key-pair.\ncert:\n  # -- If set to `true` the CertificateSigningRequest used to generate the certificate used by\n  #   Webhooks will be approved by the Operator Installation Job.\n  autoapprove: true\n  # -- When set to `true` the Operator certificate will be created.\n  createForOperator: true\n  # -- When set to `true` the Web Console / REST API certificate will be created.\n  createForWebApi: true\n  # -- (string) The Secret name with the Operator Webhooks certificate issued by the Kubernetes cluster CA\n  #   of type kubernetes.io/tls. See https://kubernetes.io/docs/concepts/configuration/secret/#tls-secrets\n  secretName:\n  # -- When set to `true` the Operator certificates will be regenerated if `createForOperator` is set to `true`, and the certificate is expired or invalid.\n  regenerateCert: true\n  # -- (integer) The duration in days of the generated certificate for the Operator after which it will expire and be regenerated.\n  #   If not specified it will be set to 730 (2 years) by default.\n  certDuration: 730\n  # -- (string) The Secret name with the Web Console / REST API certificate\n  #   of type kubernetes.io/tls. See https://kubernetes.io/docs/concepts/configuration/secret/#tls-secrets\n  webSecretName:\n  # -- When set to `true` the Web Console / REST API certificates will be regenerated if `createForWebApi` is set to `true`, and the certificate is expired or invalid.\n  regenerateWebCert: true\n  # -- When set to `true` the Web Console / REST API RSA key pair will be regenerated if `createForWebApi` is set to `true`, and the certificate is expired or invalid.\n  regenerateWebRsa: true\n  # -- (integer) The duration in days of the generated certificate for the Web Console / REST API after which it will expire and be regenerated.\n  #   If not specified it will be set to 730 (2 years) by default.\n  webCertDuration:\n  # -- (integer) The duration in days of the generated RSA key pair for the Web Console / REST API after which it will expire and be regenerated.\n  #   If not specified it will be set to 730 (2 years) by default.\n  webRsaDuration:\n  # -- (string) The private RSA key used to create the Operator Webhooks certificate issued by the\n  #   Kubernetes cluster CA.\n  key:\n  # -- (string) The Operator Webhooks certificate issued by Kubernetes cluster CA.\n  crt:\n  # -- (string) The private RSA key used to generate JWTs used in REST API authentication.\n  jwtRsaKey:\n  # -- (string) The public RSA key used to verify JWTs used in REST API authentication.\n  jwtRsaPub:\n  # -- (string) The private RSA key used to create the Web Console / REST API certificate\n  webKey:\n  # -- (string) The Web Console / REST API certificate\n  webCrt:\n  # Section to configure cert-manager integration to generate Operator certificates\n  certManager:\n    # -- When set to `true` then Issuer and Certificate for Operator and Web Console / REST API\n    #   Pods will be generated\n    autoConfigure: false\n    # -- The requested duration (i.e. lifetime) of the Certificates. See https://cert-manager.io/docs/reference/api-docs/#cert-manager.io%2fv1\n    duration: \"2160h\"\n    # -- How long before the currently issued certificate’s expiry cert-manager should renew the certificate. See https://cert-manager.io/docs/reference/api-docs/#cert-manager.io%2fv1\n    renewBefore: \"360h\"\n    # -- The private key cryptography standards (PKCS) encoding for this certificate’s private key to be encoded in. See https://cert-manager.io/docs/reference/api-docs/#cert-manager.io/v1.CertificatePrivateKey\n    encoding: PKCS1\n    # -- Size is the key bit size of the corresponding private key for this certificate. See https://cert-manager.io/docs/reference/api-docs/#cert-manager.io/v1.CertificatePrivateKey\n    size: 2048\n\n# Section to configure RBAC for Web Console admin user\nrbac:\n  # -- When set to `true` the admin user is assigned the `cluster-admin` ClusterRole by creating\n  #   ClusterRoleBinding.\n  create: true\n\n# Section to configure Web Console authentication\nauthentication:\n  # -- Specify the authentication mechanism to use. By default is `jwt`, see https://stackgres.io/doc/latest/api/rbac#local-secret-mechanism.\n  #   If set to `oidc` then see https://stackgres.io/doc/latest/api/rbac/#openid-connect-provider-mechanism.\n  type: jwt\n  # -- (boolean) When `true` will create the secret used to store the `admin` user credentials to access the UI.\n  createAdminSecret: true\n  # -- The admin username that will be required to access the UI\n  user: admin\n  # -- (string) The admin password that will be required to access the UI\n  password:\n  # Section to configure Web Console OIDC authentication\n  oidc:\n    # tlsVerification -- (string) Can be one of `required`, `certificate-validation` or `none`\n    # tlsVerification:\n    # authServerUrl -- (string) \n    # authServerUrl:\n    # clientId -- (string) \n    # clientId:\n    # credentialsSecret -- (string) \n    # credentialsSecret:\n    # clientIdSecretRef -- (object)\n    # clientIdSecretRef:\n      # name -- (string) \n      # name:\n      # key -- (string) \n      # key: \n    # credentialsSecretSecretRef -- (object)\n    # credentialsSecretSecretRef:\n      # name -- (string) \n      # name:\n      # key -- (string) \n      # key:\n\n# Section to configure Prometheus integration. \nprometheus:\n  # -- If set to false disable automatic bind to Prometheus\n  #   created using the [Prometheus Operator](https://github.com/prometheus-operator/prometheus-operator).\n  # If disabled the cluster will not be binded to Prometheus automatically and will require manual\n  #   intervention by the Kubernetes cluster administrator.\n  allowAutobind: true\n\n# Section to configure Grafana integration \ngrafana:\n  # -- When set to `true` embed automatically Grafana into the Web Console by creating the\n  #   StackGres dashboards and the read-only role used to read it from the Web Console \n  autoEmbed: false\n  # -- The schema to access Grafana. By default http. (used to embed manually and\n  #   automatically grafana)\n  schema: http\n  # -- (string) The service host name to access grafana (used to embed manually and\n  #   automatically Grafana). \n  # The parameter value should point to the grafana service following the \n  #   [DNS reference](https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/) `svc_name.namespace`\n  webHost:\n  # -- The datasource name used to create the StackGres Dashboards into Grafana\n  datasourceName: Prometheus\n  # -- The username to access Grafana. By default admin. (used to embed automatically\n  #   Grafana)\n  user: admin\n  # -- The password to access Grafana. By default prom-operator (the default in for\n  #   kube-prometheus-stack helm chart). (used to embed automatically Grafana)\n  password: prom-operator\n  # -- Use follwing fields to indicate a secret where the grafana admin credentials are stored (replace user/password)\n\n  # -- (string) The namespace of secret with credentials to access Grafana. (used to\n  #   embed automatically Grafana, alternative to use `user` and `password`)\n  secretNamespace:\n  # -- (string) The name of secret with credentials to access Grafana. (used to embed\n  #   automatically Grafana, alternative to use `user` and `password`)\n  secretName:\n  # -- (string) The key of secret with username used to access Grafana. (used to embed\n  #   automatically Grafana, alternative to use `user` and `password`)\n  secretUserKey:\n  # -- (string) The key of secret with password used to access Grafana. (used to\n  #   embed automatically Grafana, alternative to use `user` and `password`)\n  secretPasswordKey:\n  # -- (string) The ConfigMap name with the dashboard JSONs\n  #   that will be created in Grafana. If not set the default\n  #   StackGres dashboards will be created. (used to embed automatically Grafana)\n  dashboardConfigMap:\n  # -- (array) The URLs of the PostgreSQL dashboards created in Grafana (used to embed manually\n  #   Grafana). It must contain an entry for each JSON file under `grafana-dashboards` folder: `archiving.json`, \n  #   `connection-pooling.json`, `current-activity.json`, `db-info.json`, `db-objects.json`, `db-os.json`, `queries.json`\n  #   and `replication.json`\n  urls:\n  # Create and copy/paste grafana API token:\n  # - Grafana \u003e Configuration \u003e API Keys \u003e Add API key (for viewer) \u003e Copy key value\n\n  # -- (string) The Grafana API token to access the PostgreSQL dashboards created\n  #   in Grafana (used to embed manually Grafana)\n  token:\n\n# Section to configure extensions\nextensions:\n  # -- A list of extensions repository URLs used to retrieve extensions\n  #\n  # To set a proxy for extensions repository add parameter proxyUrl to the URL:\n  #   `https://extensions.stackgres.io/postgres/repository?proxyUrl=\u003cproxy scheme\u003e%3A%2F%2F\u003cproxy host\u003e[%3A\u003cproxy port\u003e]` (URL encoded)\n  # \n  # Other URL parameters are:\n  # \n  # * `skipHostnameVerification`: set it to `true` in order to use a server or a proxy with a self signed certificate\n  # * `retry`: set it to `\u003cmax retriex\u003e[:\u003csleep before next retry\u003e]` in order to retry a request on failure\n  # * `setHttpScheme`: set it to `true` in order to force using HTTP scheme\n  repositoryUrls:\n  - https://extensions.stackgres.io/postgres/repository\n  # Section to configure extensions cache (experimental).\n  #\n  # This feature is in beta and may cause failures, please use with caution and report any\n  #   error to https://gitlab.com/ongresinc/stackgres/-/issues/new\n  cache:\n    # -- When set to `true` enable the extensions cache.\n    #\n    # This feature is in beta and may cause failures, please use with caution and report any\n    #   error to https://gitlab.com/ongresinc/stackgres/-/issues/new\n    enabled: false\n    # -- An array of extensions pattern used to pre-loaded estensions into the extensions cache\n    preloadedExtensions:\n    - x86_64/linux/timescaledb-1\\.7\\.4-pg12\n    # Section to configure the extensions cache PersistentVolume\n    persistentVolume:\n      # -- The PersistentVolume size for the extensions cache\n      #\n      # Only use whole numbers (e.g. not 1e6) and K/Ki/M/Mi/G/Gi as units\n      size: 1Gi\n      # -- (string) If defined set storage class\n      # If set to \"-\" (equivalent to storageClass: \"\" in a PV spec) disables\n      #   dynamic provisioning\n      # If undefined (the default) or set to null, no storageClass spec is\n      #   set, choosing the default provisioner.  (gp2 on AWS, standard on\n      #   GKE, AWS \u0026 OpenStack)\n      storageClass:\n    # -- (string) If set, will use a host path volume with the specified path for the extensions cache\n    #   instead of a PersistentVolume\n    hostPath:\n\n# Following options are for developers only, but can also be useful in some cases ;)\n\n# Section to configure developer options.\ndeveloper:\n  # -- (string) Set the operator version (used for testing)\n  version:\n  # -- (string) Set `quarkus.log.level`. See https://quarkus.io/guides/logging#root-logger-configuration\n  logLevel:\n  # -- If set to `true` add extra debug to any script controlled by the reconciliation cycle of the operator configuration\n  showDebug: false\n  # -- Set `quarkus.log.console.format` to `%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c{4.}] (%t) %s%e%n`. See https://quarkus.io/guides/logging#logging-format\n  showStackTraces: false\n  # -- Only work with JVM version and allow connect\n  # on port 8000 of operator Pod with jdb or similar\n  enableJvmDebug: false\n  # -- Only work with JVM version and if `enableJvmDebug` is `true`\n  #   suspend the JVM until a debugger session is started\n  enableJvmDebugSuspend: false\n  # -- (string) Set the external Operator IP\n  externalOperatorIp:\n  # -- (integer) Set the external Operator port\n  externalOperatorPort:\n  # -- (string) Set the external REST API IP\n  externalRestApiIp:\n  # -- (integer) Set the external REST API port\n  externalRestApiPort:\n  # -- If set to `true` and `extensions.cache.enabled` is also `true`\n  #   it will try to download extensions from images (experimental)\n  allowPullExtensionsFromImageRepository: false\n  # -- It set to `true` disable arbitrary user that is set for OpenShift clusters\n  disableArbitraryUser: false\n  # Section to define patches for some StackGres Pods\n  patches:\n    # Section to define volumes to be used by the operator container\n    operator:\n      # -- Pod volumes. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#volume-v1-core\n      volumes: []\n      # -- Pod's container volume mounts. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#volumemount-v1-core\n      volumeMounts: []\n    # Section to define volumes to be used by the restapi container\n    restapi:\n      # -- Pod volumes. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#volume-v1-core\n      volumes: []\n      # -- Pod's container volume mounts. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#volumemount-v1-core\n      volumeMounts: []\n    # Section to define volumes to be used by the adminui container\n    adminui:\n      # -- Pod volumes. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#volume-v1-core\n      volumes: []\n      # -- Pod's container volume mounts. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#volumemount-v1-core\n      volumeMounts: []\n    # Section to define volumes to be used by the jobs container\n    jobs:\n      # -- Pod volumes. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#volume-v1-core\n      volumes: []\n      # -- Pod's container volume mounts. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#volumemount-v1-core\n      volumeMounts: []\n    # Section to define volumes to be used by the cluster controller container\n    clusterController:\n      # -- Pod volumes. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#volume-v1-core\n      volumes: []\n      # -- Pod's container volume mounts. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#volumemount-v1-core\n      volumeMounts: []\n    # Section to define volumes to be used by the distributedlogs controller container\n    distributedlogsController:\n      # -- Pod volumes. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#volume-v1-core\n      volumes: []\n      # -- Pod's container volume mounts. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#volumemount-v1-core\n      volumeMounts: []\n\n"
            ],
            "verify": false,
            "version": "1.12.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    }
  ],
  "check_results": null
}
